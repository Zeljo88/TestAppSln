{"ast":null,"code":"import { VMService } from '../services/vm.service';\nimport { HttpClient } from '@angular/common/http';\nimport { ErrorService } from '../services/error.service';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { merge, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/table\";\n\nfunction AwsComponent_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" No. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1, \" {{element.instanceId} \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.name, \" \");\n  }\n}\n\nfunction AwsComponent_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" Instance Type \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1, \" {{element.instanceType\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 9);\n    i0.ɵɵtext(1, \" State \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 10);\n    i0.ɵɵtext(1, \" {{element.state} \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AwsComponent_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 11);\n  }\n}\n\nfunction AwsComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 12);\n  }\n}\n\nexport let AwsComponent = /*#__PURE__*/(() => {\n  class AwsComponent {\n    constructor(_httpClient) {\n      this._httpClient = _httpClient;\n      this.displayedColumns = ['instanceId', 'name', 'number', 'title'];\n      this.data = [];\n      this.resultsLength = 0;\n      this.isLoadingResults = true;\n      this.isRateLimitReached = false;\n    }\n\n    ngAfterViewInit() {\n      this.exampleDatabase = new ExampleHttpDatabase(this._httpClient); // If the user changes the sort order, reset back to the first page.\n\n      this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n      merge(this.sort.sortChange, this.paginator.page).pipe(startWith({}), switchMap(() => {\n        this.isLoadingResults = true;\n        return this.exampleDatabase.getRepoIssues(this.sort.active, this.sort.direction, this.paginator.pageIndex).pipe(catchError(() => observableOf(null)));\n      }), map(data => {\n        // Flip flag to show that loading has finished.\n        this.isLoadingResults = false;\n        this.isRateLimitReached = data === null;\n\n        if (data === null) {\n          return [];\n        } // Only refresh the result length if there is new data. In case of rate\n        // limit errors, we do not want to reset the paginator to zero, as that\n        // would prevent users from re-triggering requests.\n\n\n        this.resultsLength = data.total_count;\n        return data.items;\n      })).subscribe(data => this.data = data);\n    }\n\n  }\n\n  AwsComponent.ɵfac = function AwsComponent_Factory(t) {\n    return new (t || AwsComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  AwsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AwsComponent,\n    selectors: [[\"aws-component\"]],\n    viewQuery: function AwsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([VMService, ErrorService])],\n    decls: 15,\n    vars: 3,\n    consts: [[\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"instanceId\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"matColumnDef\", \"instanceType\"], [\"matColumnDef\", \"state\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function AwsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"table\", 0);\n        i0.ɵɵelementContainerStart(1, 1);\n        i0.ɵɵtemplate(2, AwsComponent_th_2_Template, 2, 0, \"th\", 2);\n        i0.ɵɵtemplate(3, AwsComponent_td_3_Template, 2, 0, \"td\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(4, 4);\n        i0.ɵɵtemplate(5, AwsComponent_th_5_Template, 2, 0, \"th\", 2);\n        i0.ɵɵtemplate(6, AwsComponent_td_6_Template, 2, 1, \"td\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(7, 5);\n        i0.ɵɵtemplate(8, AwsComponent_th_8_Template, 2, 0, \"th\", 2);\n        i0.ɵɵtemplate(9, AwsComponent_td_9_Template, 2, 0, \"td\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(10, 6);\n        i0.ɵɵtemplate(11, AwsComponent_th_11_Template, 2, 0, \"th\", 2);\n        i0.ɵɵtemplate(12, AwsComponent_td_12_Template, 2, 0, \"td\", 3);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(13, AwsComponent_tr_13_Template, 1, 0, \"tr\", 7);\n        i0.ɵɵtemplate(14, AwsComponent_tr_14_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"dataSource\", ctx.data);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i2.MatTable, i2.MatHeaderCellDef, i2.MatHeaderRowDef, i2.MatColumnDef, i2.MatCellDef, i2.MatRowDef, i2.MatHeaderCell, i2.MatCell, i2.MatHeaderRow, i2.MatRow],\n    styles: [\".example-container[_ngcontent-%COMP%]{position:relative}.example-table-container[_ngcontent-%COMP%]{position:relative;min-height:200px;max-height:400px;overflow:auto}table[_ngcontent-%COMP%]{width:100%}.example-loading-shade[_ngcontent-%COMP%]{position:absolute;top:0;left:0;bottom:56px;right:0;background:rgba(0,0,0,.15);z-index:1;display:flex;align-items:center;justify-content:center}.example-rate-limit-reached[_ngcontent-%COMP%]{max-width:360px;text-align:center}.mat-column-number[_ngcontent-%COMP%], .mat-column-state[_ngcontent-%COMP%]{max-width:64px}.mat-column-created[_ngcontent-%COMP%]{max-width:124px}\"]\n  });\n  /** An example database that the data source uses to retrieve data for the table. */\n\n  return AwsComponent;\n})();\nexport class ExampleHttpDatabase {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n\n  getRepoIssues(sort, order, page) {\n    const href = 'https://localhost:44334/vm';\n    const requestUrl = `${href}?q=repo:angular/components&sort=${sort}&order=${order}&page=${page + 1}`;\n    return this._httpClient.get(href);\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}